# Get a bunch of info on a user and their account\password. I sometimes even do this just to confirm the username is the one I am thinking of. The SID is helpful for HKEY_Users stuff (not HKCU)
function Get-ADUserPasswordInfo {
    param (
        [string]$NameFilter
    )

    # Add wildcards around the name filter
    $NameFilter = "*$NameFilter*"

    Get-ADUser -Filter { Name -like $NameFilter -or SamAccountName -like $NameFilter -or DisplayName -like $NameFilter } -Properties DisplayName, SamAccountName, LastLogonDate, Enabled, PwdLastSet, 
    msDS-UserPasswordExpiryTimeComputed,LockedOut,TargetAddress, country, company, department, emailaddress, manager, office, state, title, whenCreated, SID, Division, MemberOF |
    Select-Object -Property Name, DisplayName, SamAccountName, EmailAddress, Title, Department, Manager,
    @{Name = "UPN"; Expression = { $_.UserPrincipalName } },  
    LastLogonDate,
    Enabled, 
    DistinguishedName, Country, State, Office,
    @{Name = "Mailbox Target"; Expression = { $_.TargetAddress } }, 
    SID, Division,
    @{Name = "Account Creation Date"; Expression = { $_.whenCreated } },
    @{Name = "Password Set Time"; Expression = { [datetime]::FromFileTime($_.PwdLastSet) } },
    @{Name = "Days Since Password Set"; Expression = { (New-TimeSpan -Start ([datetime]::FromFileTime($_.PwdLastSet)) -End (Get-Date)).Days } },
    @{Name = "Password Expire Time"; Expression = { [datetime]::FromFileTime($_."msDS-UserPasswordExpiryTimeComputed") } },
    @{Name = "Days Until Password Expire"; Expression = { (New-TimeSpan -Start (Get-Date) -End ([datetime]::FromFileTime($_."msDS-UserPasswordExpiryTimeComputed"))).Days } },
    @{Name = "Account Locked"; Expression = { $_.LockedOut } },
    @{Name = "AD Groups"; Expression = { $_.MemberOF  -join "`n"} }
}

Set-Alias -Name Get-Who -Value Get-ADUserPasswordInfo

# ex: Get-ADUserPasswordInfo -NameFilter partialName
# ex: Get-Who -NameFilter partialName
